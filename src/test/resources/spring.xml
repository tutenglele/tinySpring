<?xml version="1.0" encoding="UTF-8"?>
<beans>

<!--    <bean id="userDao" class="cn.tinyspring.springframework.test.bean.UserDao" init-method="initDataMethod" destroy-method="destroyDataMethod"/>-->

<!--    <bean id="userService" class="cn.tinyspring.springframework.test.bean.UserService" scope="prototype">-->
<!--        <property name="uId" value="111"/>-->
<!--        <property name="userDao" ref="proxyUserDao"/>-->
<!--        <property name="company" value="腾讯"/>-->
<!--        <property name="location" value="深圳"/>-->
<!--    </bean>-->
<!--    <bean class="cn.tinyspring.springframework.test.event.CustomEventListener"/>-->
<!--    <bean class="cn.tinyspring.springframework.test.event.ContextClosedEventListener"/>-->
<!--    <bean class="cn.tinyspring.springframework.test.event.ContextRefreshedEventListener"/>-->
<!--&lt;!&ndash;    <bean id="proxyUserDao" class="cn.tinyspring.springframework.test.bean.ProxyFactoryBean"/>&ndash;&gt;-->
<!--    <bean class="cn.tinyspring.springframework.test.common.MyBeanFactoryPostProcessor"/>-->
<!--    <bean class="cn.tinyspring.springframework.test.common.MyBeanPostProcessor"/>-->

    <bean id="car" class="cn.tinyspring.springframework.test.bean.Car"/>

    <bean class="cn.tinyspring.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean id="beforeAdvice" class="cn.tinyspring.springframework.test.bean.CarBeforeAdvice"/>

    <bean id="methodInterceptor" class="cn.tinyspring.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="advice" ref="beforeAdvice"/>
    </bean>

    <bean id="pointcutAdvisor" class="cn.tinyspring.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* cn.tinyspring.springframework.test.bean.ICar.*(..))"/>
        <property name="advice" ref="methodInterceptor"/>
    </bean>

</beans>